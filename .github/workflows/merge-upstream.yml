# SPDX-FileCopyrightText: 2025 LaCumbiaDelCoronavirus <90893484+LaCumbiaDelCoronavirus@users.noreply.github.com>
# SPDX-FileCopyrightText: 2025 github-actions[bot] <github-actions[bot]@users.noreply.github.com>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

name: Merge and PR upstream changes

on:
  schedule:
    - cron: '0 2 * * *' # 2am utc daily
  workflow_dispatch:

env:
  MERGE_BRANCH: auto-upstream-merge
  MERGED_REPO: https://github.com/Goob-Station/Goob-Station.git
  GH_TOKEN: ${{ secrets.BOT_TOKEN }}

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup
      run: |
        git config user.name ${{ vars.CHANGELOG_USER }}
        git config user.email ${{ vars.CHANGELOG_EMAIL }}
        git remote add upstream $MERGED_REPO
        git fetch upstream

    - name: Look for existing merge PRs
      id: findpr
      uses: peter-evans/find-pull-request@v2
      with:
        head: $MERGE_BRANCH
        base: master
        state: open

    - name: Abort when finding existing PR
      id: ensure
      run: |
        if [ steps.findpr.outputs.pull_request_number != '' ]; then
          echo "Merge PR already exists: #${{ steps.findpr.outputs.pull_request_number }}!"
          echo "already_exists=true" >> $GITHUB_OUTPUT
        else
          echo "already_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Merge from upstream
      if: steps.ensure.outputs.already_exists == 'false'
      id: merge
      run: |
        git checkout -b $MERGE_BRANCH

        BASE_COMMIT=$(git rev-parse HEAD)

        if ! git merge upstream/master --no-edit; then
          echo "Merge conflicts found; commiting conflicted merge for manual resolution"

          git add -A
          git commit --no-verify -m "Merge upstream with conflicts"
          echo "conflicted=true" >> $GITHUB_OUTPUT
        else
          echo "conflicted=false" >> $GITHUB_OUTPUT
        fi

        if [ "$BASE_COMMIT" = "$(git rev-parse HEAD)" ]; then
          echo "No changes found; aborting merge."
          exit 0
        fi

    - name: Create branch
      if: steps.ensure.outputs.already_exists == 'false'
      run: |
        git push --force https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git $MERGE_BRANCH

    - uses: peter-evans/create-pull-request@v5
      if: steps.ensure.outputs.already_exists == 'false'
      with:
        token: $GH_TOKEN
        commit-message: 'Sync changes from upstream'
        branch: $MERGE_BRANCH
        base: master
        title: 'Merge changes from upstream repository'
        body: |
          This is an automated PR to merge from upstream.
        labels: Automated

    - if: steps.ensure.outputs.already_exists == 'false' && steps.merge.outputs.conflicted == 'true'
      uses: actions-ecosystem/action-add-labels@v1
      with:
        labels: "S: Merge Conflict"
